let minor :: Pattern Int
    minor = listToPat [0,3,7]
    major :: Pattern Int
    major = listToPat [0,4,7]
    nine :: Pattern Int
    nine = listToPat [0,4,7,10,14]
    ninesus4 :: Pattern Int
    ninesus4 = listToPat [0,5,7,10,14]
    add9 :: Pattern Int
    add9 = listToPat [0,4,7,14]
    madd9 :: Pattern Int
    madd9 = listToPat [0,3,7,14]
    maj9 :: Pattern Int
    maj9 = listToPat [0,4,7,11,14]
    m9 :: Pattern Int
    m9 = listToPat [0,3,7,10,14]
    sus2 :: Pattern Int
    sus2 = listToPat [0,2,7]
    sus4 :: Pattern Int
    sus4 = listToPat [0,5,7]
    seven :: Pattern Int
    seven = listToPat [0,4,7,10]
    m7 :: Pattern Int
    m7 = listToPat [0,3,7,10]
    eleven :: Pattern Int
    eleven = listToPat [0,4,7,10,14,17]
    m11 :: Pattern Int
    m11 = listToPat [0,3,7,10,14,17]
    thirteen :: Pattern Int
    thirteen = listToPat [0,4,7,10,14,21]
    m13 :: Pattern Int
    m13 = listToPat [0,3,7,10,14,21]
    ionian :: Pattern Int
    ionian = listToPat [0,2,4,5,7,9,11]
    aeolian :: Pattern Int
    aeolian = listToPat [0,2,3,5,7,8,10]
    locrian :: Pattern Int
    locrian = listToPat [0,1,3,5,6,8,10]
    phryg :: Pattern Int
    phryg = listToPat [0,1,3,5,7,8,10]
    lydian :: Pattern Int
    lydian = listToPat [0,2,4,6,7,9,11]
    enig :: Pattern Int
    enig = listToPat [0,1,3,5,6,8,10,11]
    mpent :: Pattern Int
    mpent = listToPat [0,3,5,7,10,12]
    pent :: Pattern Int
    pent = listToPat [0,2,4,7,9,12]


let rotate :: Int -> [a] -> [a]
    rotate _ [] = []
    rotate n xs = zipWith const (drop n (cycle xs)) xs

